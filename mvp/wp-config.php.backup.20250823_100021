<?php
/**
 * The base configuration for WordPress
 *
 * The wp-config.php creation script uses this file during the installation.
 * You don't have to use the web site, you can copy this file to "wp-config.php"
 * and fill in the values.
 *
 * This file contains the following configurations:
 *
 * * Database settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 *
 * @link https://wordpress.org/support/article/editing-wp-config-php/
 *
 * @package WordPress
 */

// ** Database settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'bizdir_dev' );

/** Database username */
define( 'DB_USER', 'bizdir' );

/** Database password */
define( 'DB_PASSWORD', 'bizdir123' );

/** Database hostname */
define( 'DB_HOST', 'db' );

/** Database charset to use in creating database tables. */
define( 'DB_CHARSET', 'utf8' );

/** The database collate type. Don't change this if in doubt. */
define( 'DB_COLLATE', '' );

/**#@+
 * Authentication unique keys and salts.
 *
 * Change these to different unique phrases! You can generate these using
 * the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}.
 *
 * You can change these at any point in time to invalidate all existing cookies.
 * This will force all users to have to log in again.
 *
 * @since 2.6.0
 */
define( 'AUTH_KEY',         'put your unique phrase here' );
define( 'SECURE_AUTH_KEY',  'put your unique phrase here' );
define( 'LOGGED_IN_KEY',    'put your unique phrase here' );
define( 'NONCE_KEY',        'put your unique phrase here' );
define( 'AUTH_SALT',        'put your unique phrase here' );
define( 'SECURE_AUTH_SALT', 'put your unique phrase here' );
define( 'LOGGED_IN_SALT',   'put your unique phrase here' );
define( 'NONCE_SALT',       'put your unique phrase here' );

/**#@-*/

/**
 * WordPress database table prefix.
 *
 * You can have multiple installations in one database if you give each
 * a unique prefix. Only numbers, letters, and underscores please!
 */
$table_prefix = 'wp_';

/**
 * For developers: WordPress debugging mode.
 *
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 *
 * For information on other constants that can be used for debugging,
 * visit the documentation.
 *
 * @link https://wordpress.org/support/article/debugging-in-wordpress/
 */
define( 'WP_DEBUG', true );
define( 'WP_DEBUG_LOG', true );
define( 'WP_DEBUG_DISPLAY', false );

/**
 * Redis Configuration
 */
define( 'WP_REDIS_HOST', 'redis' );
define( 'WP_REDIS_PORT', 6379 );
define( 'WP_REDIS_PASSWORD', '' );
define( 'WP_REDIS_DATABASE', 0 );

/**
 * BizDir Custom Configuration
 */
define( 'BIZDIR_THEME_PATH', '/var/www/html/wp-content/themes/biz-dir/' );
define( 'BIZDIR_PLUGIN_PATH', '/var/www/html/wp-content/plugins/biz-dir-core/' );

/**
 * Dynamic URL Configuration for Multi-Environment Support
 * Automatically detects environment and sets appropriate URLs
 * Works with localhost, IP access, Docker, and production environments
 */

// Function to detect current environment and set URLs dynamically
function bizdir_set_dynamic_urls() {
    // Skip if URLs are already defined (prevents conflicts)
    if (defined('WP_HOME') || defined('WP_SITEURL')) {
        return;
    }
    
    // Skip in CLI/WP-CLI context
    if (php_sapi_name() === 'cli' || !isset($_SERVER['HTTP_HOST'])) {
        return;
    }
    
    $http_host = $_SERVER['HTTP_HOST'];
    $request_uri = $_SERVER['REQUEST_URI'] ?? '';
    $protocol = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on') ? 'https' : 'http';
    
    // Environment detection and URL configuration
    $environment_config = [
        // Development environments
        'localhost:8888' => [
            'allowed' => true,
            'type' => 'development',
            'base_url' => 'http://localhost:8888'
        ],
        '127.0.0.1:8888' => [
            'allowed' => true,
            'type' => 'development',
            'base_url' => 'http://127.0.0.1:8888'
        ],
        
        // Docker development (common ports)
        'localhost:80' => [
            'allowed' => true,
            'type' => 'docker',
            'base_url' => 'http://localhost'
        ],
        'localhost:443' => [
            'allowed' => true,
            'type' => 'docker',
            'base_url' => 'https://localhost'
        ],
        
        // Local network access (auto-detect IP ranges)
        'auto_detect_local' => true
    ];
    
    $site_url = null;
    
    // Check exact matches first
    if (isset($environment_config[$http_host])) {
        $config = $environment_config[$http_host];
        if ($config['allowed']) {
            $site_url = $config['base_url'];
        }
    }
    // Auto-detect local network IPs
    elseif ($environment_config['auto_detect_local']) {
        // Common local network patterns
        $local_patterns = [
            '/^192\.168\.\d{1,3}\.\d{1,3}:8888$/',  // 192.168.x.x:8888
            '/^10\.\d{1,3}\.\d{1,3}\.\d{1,3}:8888$/',  // 10.x.x.x:8888
            '/^172\.(1[6-9]|2[0-9]|3[0-1])\.\d{1,3}\.\d{1,3}:8888$/', // 172.16-31.x.x:8888
            '/^192\.168\.\d{1,3}\.\d{1,3}$/',       // 192.168.x.x (port 80)
            '/^10\.\d{1,3}\.\d{1,3}\.\d{1,3}$/',    // 10.x.x.x (port 80)
            '/^172\.(1[6-9]|2[0-9]|3[0-1])\.\d{1,3}\.\d{1,3}$/' // 172.16-31.x.x (port 80)
        ];
        
        foreach ($local_patterns as $pattern) {
            if (preg_match($pattern, $http_host)) {
                $site_url = $protocol . '://' . $http_host;
                break;
            }
        }
    }
    
    // Production domain detection (if not local)
    if (!$site_url) {
        // Allow production domains (add your actual domains here)
        $production_domains = [
            // Add your production domains here
            // 'yourdomain.com',
            // 'www.yourdomain.com',
        ];
        
        $host_without_port = explode(':', $http_host)[0];
        if (in_array($host_without_port, $production_domains)) {
            $site_url = $protocol . '://' . $http_host;
        }
    }
    
    // Set WordPress URLs if we have a valid site URL
    if ($site_url) {
        define('WP_HOME', $site_url);
        define('WP_SITEURL', $site_url);
        
        // Optional: Log the detected configuration for debugging
        if (defined('WP_DEBUG') && WP_DEBUG) {
            error_log("[BizDir] Dynamic URL set: {$site_url} (Host: {$http_host})");
        }
    }
}

// Initialize dynamic URL configuration
bizdir_set_dynamic_urls();

/* Add any custom values between this line and the "stop editing" line. */

/* That's all, stop editing! Happy publishing. */

/** Absolute path to the WordPress directory. */
if ( ! defined( 'ABSPATH' ) ) {
	define( 'ABSPATH', __DIR__ . '/' );
}

/** Sets up WordPress vars and included files. */
require_once ABSPATH . 'wp-settings.php';
