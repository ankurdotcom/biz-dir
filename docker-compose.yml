version: '3.8'

services:
  # Database Service - MySQL 8.0
  db:
    image: mysql:8.0
    container_name: bizdir_database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-bizdir_root_2025!}
      MYSQL_DATABASE: ${DB_NAME:-bizdir_production}
      MYSQL_USER: ${DB_USER:-bizdir_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-bizdir_secure_2025!}
    volumes:
      - db_data:/var/lib/mysql
      - ./mvp/config/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./mvp/config/monetization_schema.sql:/docker-entrypoint-initdb.d/02-monetization.sql
      - ./mvp/config/analytics_schema.sql:/docker-entrypoint-initdb.d/03-analytics.sql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - bizdir_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-bizdir_root_2025!}"]
      timeout: 20s
      retries: 10

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: bizdir_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-bizdir_redis_2025!}
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - bizdir_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 10s
      retries: 5

  # PHP-FPM Service
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PHP_VERSION: 8.3
    container_name: bizdir_php
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - PHP_ENV=${APP_ENV:-production}
      - WP_ENV=${APP_ENV:-production}
    volumes:
      - ./mvp:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf
      - wp_uploads:/var/www/html/wp-content/uploads
      - wp_cache:/var/www/html/wp-content/cache
    networks:
      - bizdir_network
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      timeout: 10s
      retries: 3

  # Nginx Web Server
  nginx:
    image: nginx:1.25-alpine
    container_name: bizdir_nginx
    restart: unless-stopped
    depends_on:
      - php
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./mvp:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites-available/bizdir.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - wp_uploads:/var/www/html/wp-content/uploads:ro
      - nginx_logs:/var/log/nginx
    networks:
      - bizdir_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      timeout: 10s
      retries: 3

  # Elasticsearch for Advanced Search (Optional)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: bizdir_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_PORT:-9200}:9200"
    networks:
      - bizdir_network
    profiles:
      - full
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      timeout: 30s
      retries: 5

  # Backup Service
  backup:
    build:
      context: .
      dockerfile: docker/backup/Dockerfile
    container_name: bizdir_backup
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
      - DB_HOST=db
      - DB_NAME=${DB_NAME:-bizdir_production}
      - DB_USER=${DB_USER:-bizdir_user}
      - DB_PASSWORD=${DB_PASSWORD:-bizdir_secure_2025!}
    volumes:
      - backup_data:/backups
      - ./mvp:/var/www/html:ro
    networks:
      - bizdir_network
    profiles:
      - full

  # Monitoring - Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: bizdir_prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - bizdir_network
    profiles:
      - monitoring

  # Monitoring - Grafana (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: bizdir_grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-bizdir_admin_2025!}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - bizdir_network
    profiles:
      - monitoring

  # SSL Certificate Management
  certbot:
    image: certbot/certbot
    container_name: bizdir_certbot
    volumes:
      - ./docker/nginx/ssl:/etc/letsencrypt
      - ./mvp:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ${SSL_EMAIL:-admin@yourdomain.com} --agree-tos --no-eff-email -d ${DOMAIN_NAME:-yourdomain.com}
    profiles:
      - ssl

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  wp_uploads:
    driver: local
  wp_cache:
    driver: local
  nginx_logs:
    driver: local
  elasticsearch_data:
    driver: local
  backup_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  bizdir_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
